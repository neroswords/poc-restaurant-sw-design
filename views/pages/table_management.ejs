<!-- index.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Table List</title>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Sarabun:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800&display=swap" rel="stylesheet">

<style>
    .card {
        cursor: pointer;
        width: 125px;
        height: 125px;
        display: flex;
        border-radius: 11px;
        /* align-items: center;
        justify-content: center; */
        font-size: 24px;
        background-color: #F9F9F9;
        box-shadow: rgb(0 0 0 / 8%) 0px 0px 3px;
        border: none;
        overflow: hidden;
    }
    .active {
        box-shadow: rgb(0 0 0 / 12%) 0px 0px 4px;
        background-color: #EE7B5B;
        color: white;
    }
    .text-black {
        color: #353535;
    }
</style>
</head>
<body style='color: #353535; background-color: #F5F5F5;font-family: "Sarabun", sans-serif;'>

<div class="container mt-5">
    <div style="border: #E9E9E9 1px;  border-bottom-style: solid; margin-bottom: 25px;"><p style="font-size: 24px; font-weight: 300;margin-bottom: 15px;">‡∏ó‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≤‡∏ô</p></div>
    <div class="row row-cols-1 row-cols-md-6 g-4">
        <% tables.forEach(function(table, idx) { %>
            <div class="col">
                <!-- data-bs-toggle="modal" data-bs-target="#activeModal" onclick="onClickTable(this, 'table<%= table.tableNumber %>')"-->
                <div class="card" data-bs-toggle="modal" data-bs-target="#activeModal" data-bs-whatever="<%= table.tableNumber %>" id="card-table<%= table.tableNumber %>"  <% /* eslint-disable css-propertyvalueexpected */ %> style="background-color: <%= table.status === 'active' ? '#EE7B5B' : '#F9F9F9' %>">
                    <div class="card-body <%= table.status === 'active' ? 'active' : '' %>" style="padding: 10px 10px;" id="table<%= table.tableNumber %>">
                        <p style="font-size: 20px; font-weight: 300;">‡πÇ‡∏ï‡πä‡∏∞ <%= table.tableNumber %></p>
                    </div>
                </div>
            </div>
        <% }); %>
    </div>
</div>

<div class="modal fade" style="overflow: hidden;" id="activeModal" tabindex="-1" aria-labelledby="activeModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="margin-right: 14px; margin-top: 14px; height: 100%;">
        <div class="modal-content" style="height: calc(100% - 28px);">
            <div class="modal-header">
                <h5 class="modal-title" id="activeModalLabel">Active</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div style="flex:1;background-color: #F4F4F4; padding: 8px;">
                <div style="background-color: #EBEBE9; border-radius: 13px; padding: 8px;">
                    <p>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</p>
                    <div class="modal-body" style="padding: 0px">
                    <!-- Modal Content -->
                    </div>
                </div>
            </div>
            <div style="border: #EEEEEE 1px;background-color: #fff;border-top-style: solid;padding: 10px;"><p style="margin-bottom:4px;font-size: 20px;text-align: right;" id="totalPrice" ></p><p id="remark" style="text-align: right; margin-bottom: 4px; color: #808080;">* ‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏õ‡∏¥‡∏î‡πÇ‡∏ï‡πä‡∏∞</p></div>
            <div class="modal-footer">
                <button style="border-color: #D9D9D9;margin:0;width: 30%;height: 45px;color: #696969;background: transparent;" type="button" class="btn btn-secondary" data-bs-dismiss="modal">‡∏õ‡∏¥‡∏î</button>
                <!-- <button class="btn btn-primary" id="confirmOrderBtn" onclick="postActiveTable()">confirm</button> -->
                <button style="background-color: #EE8164; border: 0px; margin:0;margin-left: 8px; flex:1; height: 45px;" class="btn btn-primary" id="confirmOrderBtn" data-bs-dismiss="modal" value="">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô</button>
                <!-- Add any additional buttons here if needed -->
            </div>
        </div>
    </div>
</div>

<!-- <div class="modal fade" id="inactiveModal" tabindex="-1" aria-labelledby="inactiveModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="inactiveModalLabel">Inactive</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Modal Content
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                Add any additional buttons here if needed
            </div>
        </div>
    </div>
</div> -->
<script>

    function makeDistinctByFoodIdWithCounts(arr) {
        const distinctItemsWithCounts = arr.reduce((acc, curr) => {
            const foundIndex = acc.findIndex(item => item.food.id === curr.food.id);
            if (foundIndex !== -1) {
                acc[foundIndex].count++;
            } else {
                acc.push({ food: curr.food, count: 1 });
            }
            return acc;
        }, []);
        return distinctItemsWithCounts;
    }

    const activeModal = document.getElementById('activeModal')
    if (activeModal) {
        activeModal.addEventListener('show.bs.modal', event => {
        // Button that triggered the modal
        const button = event.relatedTarget
        // Extract info from data-bs-* attributes
        const tableNumber = button.getAttribute('data-bs-whatever')
        // If necessary, you could initiate an Ajax request here
        // and then do the updating in a callback.
       
        
        // Update the modal's content.
        const modalTitle = activeModal.querySelector('.modal-title')
        const table = document.getElementById(`table${tableNumber}`);
        const modalBodyInput = activeModal.querySelector('.modal-body');
        const modalConfirm = document.getElementById('confirmOrderBtn');
        modalConfirm.value = tableNumber;
        if(table.className.includes("active")){
            modalConfirm.removeEventListener('click', postActiveTable);
            modalConfirm.addEventListener('click', postCloseTable);
            activeModal.querySelector('#confirmOrderBtn').innerHTML = '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô';
            getOrderFromTableNumber(tableNumber).then((tableOrders)=>{
                console.log('tableOrders', tableOrders)
                if(tableOrders.data){
                    const modalTitle = activeModal.querySelector('.modal-title');
                    const modalBodyInput = activeModal.querySelector('.modal-body');
                    const totalPriceText = activeModal.querySelector('#totalPrice');
                    const distinctArrayWithCounts = makeDistinctByFoodIdWithCounts(tableOrders.data.foodOrder);
                    var totalPrice = 0;
                    var htmlBody = "";
                    distinctArrayWithCounts.forEach(element => {
                        totalPrice += element.food.price * element.count;
                        htmlBody += `<div style="margin-bottom: 8px;display: flex;background-color: #fff;padding: 12px;border-radius: 12px;gap:13px"><img style="width: 45px;height:45px;border-radius: 12px;aspect-ratio: 1 / 1;object-fit: cover;" src="${element.food.img ?? `https://via.placeholder.com/200`}"><div style="height: 50px;width: 100%;display: flex;flex-direction: column;"><div style="display: flex;justify-content: space-between;height: 25px;"><p>${element.food.name}</p><p>${element.food.price} ‡∏ö‡∏≤‡∏ó</p></div><p style="height: 25px;text-align: right;color:#585858;font-size: 14px;">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${element.count}</p></div></div>`;
                    });
                    totalPriceText.innerHTML = `‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${totalPrice.toFixed(2)} ‡∏ö‡∏≤‡∏ó`;
                    // htmlBody += `<p>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${totalPrice.toFixed(2)} ‡∏ö‡∏≤‡∏ó</p>`;
                    activeModal.querySelector('#remark').innerHTML = `<p style="text-align: right">* ‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏õ‡∏¥‡∏î‡πÇ‡∏ï‡πä‡∏∞</p>`;
                } else {
                    htmlBody = "<div style='margin-bottom: 50px;margin-top: 50px;text-align: center;'><p style='font-size:40px;margin-bottom: 4px;'>üçΩ</p><p style='color:#b2b2b2'>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£</p></div>";
                }
                modalBodyInput.innerHTML = htmlBody;
            });
        } else {
            modalConfirm.removeEventListener('click', postCloseTable);
            modalConfirm.addEventListener('click', postActiveTable);
            modalBodyInput.innerHTML = "<div style='margin-bottom: 50px;margin-top: 50px;text-align: center;'><p style='font-size:40px;margin-bottom: 4px;'>ü™ë</p><p style='color:#b2b2b2'>‡πÇ‡∏ï‡πä‡∏∞‡∏ß‡πà‡∏≤‡∏á</p></div>";
            activeModal.querySelector('#confirmOrderBtn').innerHTML = '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô ‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏ï‡πä‡∏∞‡πÉ‡∏´‡∏°‡πà';
            activeModal.querySelector('#remark').innerHTML = `<p style="text-align: right">* ‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏ï‡πä‡∏∞‡∏ô‡∏µ‡πâ</p>`;
            activeModal.querySelector('#totalPrice').innerHTML = '';
        }
        modalTitle.textContent = `‡πÇ‡∏ï‡πä‡∏∞ ${tableNumber}`
        
    })
    }

    function onClickTable(elem, id){
        const table = document.getElementById(id);
        console.log(table.className);
        if(table.className.includes("active")){
            showactiveModal()
        } else {
            showInactiveModal()
        }
    }

    function getOrderFromTableNumber(tableNumber){
        return fetch(`/api/v1/table/${tableNumber}`, {
        method: 'GET',
        }).then(res => res.json())
        .then(res => {
            return res;
        })
        .catch((err) => console.error(`Fetch problem: ${err.message}`));
    }

    function postCloseTable(){
        fetch(`/api/v1/table/${this.value}/close`, {
        method: 'POST',
        headers: {
            'Accept': 'application/json, text/plain, */*',
            'Content-Type': 'application/json'
        },
        }).then(res => res.json())
        .then(res => {
            const table = document.getElementById(`table${this.value}`);
            const card = document.getElementById(`card-table${this.value}`);
            card.style.backgroundColor = 'transparent';
            table.className = 'card-body';
        })
        .catch((err) => console.error(`Fetch problem: ${err.message}`));
    }

    function postActiveTable(){
        fetch(`/api/v1/table/${this.value}/activate`, {
        method: 'POST',
        headers: {
            'Accept': 'application/json, text/plain, */*',
            'Content-Type': 'application/json'
        },
        }).then(res => res.json())
        .then(res => {
            const table = document.getElementById(`table${this.value}`);
            const card = document.getElementById(`card-table${this.value}`);
            card.style.backgroundColor = '#28a745';
            table.className = 'card-body active';
        })
        .catch((err) => console.error(`Fetch problem: ${err.message}`));
    }
    
    function showactiveModal() {
        var modalContainer = document.getElementById('activeModal');
        var myModal = new bootstrap.Modal(modalContainer);
        myModal.show();
    }
    function showInactiveModal() {
        var modalContainer = document.getElementById('inactiveModal');
        var myModal = new bootstrap.Modal(document.getElementById('inactiveModal'));
        myModal.show();
    }
</script>
</body>
</html>